require 'spec_helper'
 
describe MoviesController do
  describe 'searching TMDb' do
    before :each do
      @fake_results = [mock('movie1'), mock('movie2')]
    end
    it 'should call the model method that performs TMDb search' do
      expect(Tmdb::Movie).to receive(:find).with('Aladdin')
      post :search_tmdb, {:search_terms => 'Aladdin'}
    end
    describe 'after valid search' do
      before :each do
	allow(:find_in_tmdb).and_return(@fake_results)
	post :search_tmdb, { :search_terms => 'Aladdin' }
      end
      it 'should select the Search Results template for rendering' do
	response.should render_template('search_tmdb')
      end
      it 'should make the TMDb search results available to that template' do
	assigns(:movies).should == @fake_results
      end
    end
  end
end

require 'spec_helper'
require 'rails_helper'

describe MoviesController do
  describe 'searching TMDb' do
    it 'should call the model method that performs TMDb search' do
      Movie=double(Movie)
      fake_results=[mock('movie1'), mock('movie2')]
      expect(Movie).to_receive(:find_in_tmdb.with('Ted').and_return(fake_results))
      post :search_tmdb, {:search_terms => 'Ted'}
      assigns(:movies).should == fake_results
    end
    it 'should select the Search Results template for rendering' do
      Movie=double(Movie)
      allow(Movie).to.receive(:find_in_tmdb)
      post :search_tmdb, {search_terms => 'Ted'}
      expect(response).to render_template('search_tmdb')
    end
    #it 'should make the TMDb search results available to that template'
  end
endâ€‹